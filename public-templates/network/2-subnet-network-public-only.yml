AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy VPC with 2 public subnet'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Stack Inputs'
      Parameters:
      - ProjectName
      - CidrPrefix
#Input Parameters
Parameters:
  #Project Name
  ProjectName:
    Default: script
    NoEcho: false
    Description: Name of the Project to be used in Tags (1-8 char long)
    Type: String
    MinLength: 1
    MaxLength: 8
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
  #CidrPrefix
  CidrPrefix:
    Default: 10.200
    NoEcho: false
    Description: First 16 bit e.g. 10.200
    Type: String

#Build AWs resources
Resources:
  #Create a VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        # 10.200.200.0/24
        Fn::Join:
        - ''
        - - Ref: CidrPrefix
          - '.0.0/16'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'false'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - 'vpc'
  #Create a PublicSubnetA in AZ A
  PublicSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        #10.200.200.0/27
        Fn::Join:
        - ''
        - - Ref: CidrPrefix
          - '.1.0/24'
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - 'sub-public-A'
  #Create a PublicSubnetB in AZ B
  PublicSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        # 10.200.200.32/27
        Fn::Join:
        - ''
        - - Ref: CidrPrefix
          - '.2.0/24'
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - 'sub-public-B'

  #Create a Internet Gateway
  IGW:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - 'igw'
  #Attach the IGW to the VPC
  AttachIGWToVPC:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId:
        Ref: IGW
      VpcId:
        Ref: VPC
  #Create a Public route Table
  PublicRT:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: ProjectName
            - 'rt-public'
  #Update Public Rt to route all traffic via IGW
  PublicRTAllTrafficToIGW:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Ref: PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: IGW
  #Associate Public Subnets to Public Route Table
  AssociatePublicSubnetAToPublicRT:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: PublicRT
      SubnetId:
        Ref: PublicSubnetA
  AssociatePublicSubnetBToPublicRT:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: PublicRT
      SubnetId:
        Ref: PublicSubnetB

# Output
Outputs:
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'
  VPCId:
    Description: 'VPC ID'
    Value: !Ref VPC
  PublicSubnetAId:
    Description: 'Public Subnet A Id'
    Value: !Ref PublicSubnetA
  PublicSubnetBId:
    Description: 'Public Subnet B Id'
    Value: !Ref PublicSubnetB
  PublicRouteTableId:
    Description: 'Public Route Table Id'
    Value: !Ref PublicRT